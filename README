csvutils - CSV file utilities for the Go programming language.

VERSION

 This is csutils version iteration 0.0_2

SYNOPSIS

 The "csvutils" package can be used to read CSV files from a io.Reader.

     reader := csvutils.NewReader(os.Stdin)
     reader.Trim = true
     for r := range reader.EachRow() {
         if r.Error == nil {
             break
         }
         var fields []string = r.Fields
         // ...
         // Process the CSV row fields.
         // ...
     }


CONSTANTS

const (
    DEFAULT_SEP    = ','
    DEFAULT_TRIM   = false
    DEFAULT_CUTSET = " \t"
)


TYPES

type Reader struct {
    Sep    int    "Seperator character."
    Trim   bool   "Remove excess whitespace from field values."
    Cutset string "Set of characters to trim."
    // contains unexported fields
}

func NewReader(r io.Reader) *Reader

func NewReaderSize(r io.Reader, size int) *Reader

func (csvr *Reader) Configure(sep int, trim bool, cutset string) *Reader

func (csvr *Reader) EachRow() <-chan Row

func (csvr *Reader) Read(b []byte) (n int, err os.Error)
 Comply with the reader interface.

func (csvr *Reader) ReadRow() Row

func (csvr *Reader) Reset() *Reader

type Row struct {
    Fields []string "CSV row field data"
    Error  os.Error "Error encountered reading"
}
